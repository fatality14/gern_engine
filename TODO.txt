2
use "InstancedObject" to create custom particle system class

3?
shader constructor to parse custom shader code into glsl

!6
make WindowManager class from Window class and make the draw sequence for every window in Renderer

7
rename some classes to fit their names

8
add const qualifiers where it need to be

11
rename some GL_* definitions to own enums

!12
provide glAttachShader not only for two shaders at a time but multiple in Shader class
split shad to two commands in SceneLoader

13?
it is possible to reconstruct *Object render by using VBO, the only thing need is to make multiple VBO

15?
make counter instead of noname in object etc names

16
hide window pointers etc in *Object classes

17
disallow multiple calls of loadTexture() in Texture class, also genTextureColorBuffers() in Framebuffer class, check for others
or just let hot change

18 (47)
catch if exceed index of vectors

!21
add list of user timing functions in animation

?22
add material redaction in scene file

26 (11)
map all opengl logic and enums to samecalled functions in its own class to make multiplatform and multiversional code

add user logic hole like as in Renderer for every class?
or make interface for a lot of different cases instead

27
add namespaces

28
+remove GLfloat etc where it must be just float etc
check types in SceneLoader, they must be equal to what constructors get
e.g. FrmbCommand variables for Framebuffer

29?
a bug in animation while moving bone, it moves according to default object position

!30
pass user function in setDefaultEvents
or which is better make Event class

31
split "sklobj" in sceneloader to "sklobj" and "anm" to use animation multiple times

32?
do something with *List, IObject and other common cases

33
consider change setShaderParams method in IShaderField

34
do something with name field, it should display field usage

36?
move load method to ILoader and override it in loaders

37
in case of different mesh file formats modify MeshLoader

38
make Window proxy pattern

!39
make AnimationList and all related for SceneLoader

+41
test object draw in multithreading, might be bad for texture unit sequence
yeah, this is bad

43
add GUIObject and 2d object

44
allow to split SceneLoader scene.txt by multiple files

!45
add material manual properties command for SceneLoader tex* commands

47 (18)
add opengl debug mode

48
refactor other loaders

49
add functionality for framebuffer, mouselistener, shader, texture, windows

50
renderer should parse .txt with loader class and then render everything in declared sequence
this is the only way to reduce compile time, but slowdown render
this code must be compiled in executable not to slowdown render

51
add CMakeList to compile other libraries

52
check every refrence and pointer for null after loading

56
also check if the sufficient num args provided while parsing files

lastplan:


99?
recorder class to render video

класс для упрощения учёта набора переменных для ивентов
интерфейс взаимодействия с объектами - файл с основной логикой взаимодействия
